// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                         Int       @id @default(autoincrement())
  email                      String    @unique
  name                       String?
  password                   String
  createdAt                  DateTime  @default(now())
  updatedAt                  DateTime  @updatedAt
  plan                       String    @default("FREE")
  credits                    Int       @default(5)
  subscriptionId             String?
  subscriptionExpiry         DateTime?
  referralCode               String?   @unique
  referredByCode             String?
  referralDiscountEligible   Boolean   @default(false)
  referralDiscountUsed       Boolean   @default(false)
  resetToken                 String?
  resetTokenExpiry           DateTime?
  
  // Relations
  projects                   Project[]
  usageHistory              UsageHistory[]
}

model Project {
  id                String       @id @default(cuid())
  name              String
  description       String?
  floorPlanData     Json
  analysisData      Json?
  thumbnail         String?
  isPublic          Boolean      @default(false)
  version           Int          @default(1)
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt
  
  // Relations
  userId            Int
  user              User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  versions          ProjectVersion[]
  
  @@index([userId])
}

model ProjectVersion {
  id                String       @id @default(cuid())
  version           Int
  floorPlanData     Json
  analysisData      Json?
  changeDescription String?
  createdAt         DateTime     @default(now())
  
  // Relations
  projectId         String
  project           Project      @relation(fields: [projectId], references: [id], onDelete: Cascade)
  
  @@unique([projectId, version])
}

model UsageHistory {
  id                String       @id @default(cuid())
  action            String       // "generate", "analyze", "export"
  creditsUsed       Int          @default(0)
  details           Json?
  createdAt         DateTime     @default(now())
  
  // Relations
  userId            Int
  user              User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([userId])
}
